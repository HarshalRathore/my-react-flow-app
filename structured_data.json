[
  {
    "start_time": "2.48",
    "parent_node": "",
    "description": "Introduction to object-oriented programming",
    "id": "1",
    "topic": "Object-oriented programming"
  },
  {
    "start_time": "16.24",
    "parent_node": "1",
    "description": "Importance of prior programming knowledge",
    "id": "2",
    "topic": "Programming prerequisites"
  },
  {
    "start_time": "21.439",
    "parent_node": "2",
    "description": "Suggestion to refer to the Introduction to Programming video for beginners",
    "id": "3",
    "topic": "Introductory resources"
  },
  {
    "start_time": "84.96",
    "parent_node": "1",
    "description": "Explanation of primitive data types and their limitations",
    "id": "4",
    "topic": "Primitive data types"
  },
  {
    "start_time": "216.48",
    "parent_node": "1",
    "description": "Introduction of structs as a way to group variables",
    "topic": "Structs",
    "id": "5"
  },
  {
    "description": "Explanation of objects and classes as templates",
    "parent_node": "1",
    "start_time": "322.08",
    "id": "6",
    "topic": "Objects and classes"
  },
  {
    "description": "Definition and benefits of encapsulation in OOP",
    "parent_node": "1",
    "start_time": "465.52",
    "topic": "Encapsulation",
    "id": "7"
  },
  {
    "start_time": "512.24",
    "parent_node": "7",
    "description": "Practical examples of encapsulation in game development",
    "topic": "Encapsulation examples",
    "id": "8"
  },
  {
    "description": "Explanation of abstraction in OOP and real-life applications",
    "parent_node": "1",
    "start_time": "773.76",
    "id": "9",
    "topic": "Abstraction"
  },
  {
    "start_time": "875.04",
    "parent_node": "9",
    "description": "Benefits of abstraction in collaborative programming",
    "topic": "Abstraction in teamwork",
    "id": "10"
  },
  {
    "description": "Definition and concept of inheritance in OOP",
    "parent_node": "1",
    "start_time": "1071.28",
    "topic": "Inheritance",
    "id": "11"
  },
  {
    "description": "Explanation of access modifiers: public, private, and protected",
    "parent_node": "11",
    "start_time": "1231.76",
    "id": "12",
    "topic": "Access modifiers"
  },
  {
    "description": "Definition and types of polymorphism in OOP",
    "parent_node": "1",
    "start_time": "1375.039",
    "topic": "Polymorphism",
    "id": "13"
  },
  {
    "start_time": "1385.12",
    "parent_node": "13",
    "description": "Explanation of dynamic polymorphism with a car example",
    "topic": "Dynamic polymorphism",
    "id": "14"
  },
  {
    "description": "Explanation of static polymorphism and method overloading",
    "parent_node": "13",
    "start_time": "1564.96",
    "topic": "Static polymorphism",
    "id": "15"
  }
]